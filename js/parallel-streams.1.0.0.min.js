!function(o){function a(t,e){new Taucharts.Chart({type:"bar",x:"threads",y:"score",color:"benchmark",data:e,guide:{x:{label:{text:"Threads"}},y:{label:{text:"Ops/sec"}}},dimensions:{threads:{type:"order"},score:{type:"measure"}},plugins:[Taucharts.api.plugins.get("tooltip")({fields:["score","threads"]})]}).renderTo(document.getElementById(t))}function r(s,t,l){var i=_.max(_.map(t,function(t){return t[0].score}));_.forEach(t,function(t,e){for(var a=o("<tr/>",{class:"selection"}),r=[thead(t[0].threads)],n=0;n<l;n++)r.push(td(formatNumber(t[n].score),t[n].score===i?"em":""));a.append(r),a.appendTo("#"+s),a.click(function(){o(this).toggleClass("table-active")})})}function n(t,e){return _.flow(_.partialRight(_.take,e),_.partialRight(_.groupBy,"benchmark"))(t)}fetch("../data/benchmark-threads-streams-group-sequential.json").then(function(t){return t.text()}).then(function(t){var e=_.flow(JSON.parse,flattenJmhResults,filterData)(t);a("sequential-group-chart",_.take(e,16)),r("sequential-group-table",n(e,16),1)}),fetch("../data/benchmark-threads-streams-group-parallel.json").then(function(t){return t.text()}).then(function(t){var e=_.flow(JSON.parse,flattenJmhResults,filterData)(t);a("parallel-group-chart",_.take(e,16)),r("parallel-group-table",n(e,16),1)}),fetch("../data/benchmark-threads-streams-filter-sort-distinct-sequential.json").then(function(t){return t.text()}).then(function(t){var e=_.flow(JSON.parse,flattenJmhResults,filterData)(t);a("sequential-filter-sort-distinct-chart",_.take(e,16)),r("sequential-filter-sort-distinct-table",n(e,16),1)}),fetch("../data/benchmark-threads-streams-filter-sort-distinct-parallel.json").then(function(t){return t.text()}).then(function(t){var e=_.flow(JSON.parse,flattenJmhResults,filterData)(t);a("parallel-filter-sort-distinct-chart",_.take(e,16)),r("parallel-filter-sort-distinct-table",n(e,16),1)})}(jQuery);